# Build docker buildx for AMD64, Arm64 and ArmV7
name: CI

# Only build on pushes to master and to ghcr:master
on:
  push:
    branches:
      - "trunk"
    paths-ignore:
      - '**/**.md'
env:
  REGISTRY_GHCR: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  buildx-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx-amd64
        uses: docker/setup-buildx-action@v1

      - name: Set up Docker Buildx
        id: buildx-arm64
        uses: docker/setup-buildx-action@v1

      - name: Set up Docker Buildx
        id: buildx-armhf
        uses: docker/setup-buildx-action@v1

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@e5622373a38e60fb6d795a4421e56882f2d7a681
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: type=raw,value=latest-amd64

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY_GHCR }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # AMD64
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          builder: ${{steps.buildx-amd64.outputs.name}}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY_GHCR }}/${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=user/app:latest-amd64
          cache-to: type=inline

      # ARM64
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          builder: ${{steps.buildx-arm64.outputs.name}}
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          push: true
          tags: ${{ env.REGISTRY_GHCR }}/${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=user/app:latest-arm64
          cache-to: type=inline

      # ARMv7
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          builder: ${{steps.buildx-armhf.outputs.name}}
          context: .
          file: ./Dockerfile
          platforms: linux/arm/v7
          push: true
          tags: ${{ env.REGISTRY_GHCR }}/${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=user/app:latest-armhf
          cache-to: type=inline